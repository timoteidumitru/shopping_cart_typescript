{"version":3,"sources":["components/CartItem/CartItem.styles.ts","components/CartItem/CartItem.tsx","components/Cart/Cart.styles.ts","components/Cart/Cart.tsx","App.styles.ts","components/Table/Table.styles.ts","components/Table/TableData.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","CartItem","item","addToCart","removeFromCart","Paper","Table","TableHead","TableRow","TableCell","TableBody","category","name","amount","price","style","display","justifyContent","flexDirection","alignItems","Button","onClick","id","aside","Cart","items","cartItems","length","map","key","reduce","ack","toFixed","StyledButton","IconButton","AddRemoveItems","span","TableData","data","handleAddToCart","App","useState","cartOpen","setCartOpen","setCartItems","products","setProducts","sortOrderByPrice","setSortOrderByPrice","sortOrderByCategory","setSortOrderByCategory","useEffect","axios","get","then","response","clickedItem","prev","find","handleRemoveFromCart","Drawer","anchor","open","onClose","float","top","Badge","badgeContent","color","maxWidth","margin","marginTop","sort","obj1","obj2","handlesortByCategory","cursor","handlesortByPrice","render","document","getElementById"],"mappings":"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","file":"static/js/main.37e8fe22.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: Arial, Helvetica, sans-serif;\n  border-bottom: 1px solid lightblue;\n  padding-bottom: 20px;\n\n  div {\n    flex: 1;\n  }\n\n  .information,\n  .buttons {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  img {\n    max-width: 80px;\n    object-fit: cover;\n    margin-left: 40px;\n  }\n`\n","import Button from '@material-ui/core/Button'\nimport React from 'react'\n// Types\nimport { Product } from '../../App'\n// Styles\nimport { Wrapper } from './CartItem.styles'\nimport {\n  Table,\n  Paper,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n} from '@material-ui/core'\n\ntype Props = {\n  item: Product\n  addToCart: (clickedItem: Product) => void\n  removeFromCart: (id: number) => void\n}\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\n  <Wrapper>\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Category</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Quantity</TableCell>\n            <TableCell>Price</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell>{item.category.name}</TableCell>\n            <TableCell>{item.name}</TableCell>\n            <TableCell>{item.amount}</TableCell>\n            <TableCell>${item.price}</TableCell>\n            <TableCell\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}\n            >\n              <Button onClick={() => removeFromCart(item.id)}>(-)</Button>{' '}\n              Remove <Button onClick={() => addToCart(item)}>(+)</Button>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  </Wrapper>\n)\n\nexport default CartItem\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.aside`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 500px;\n  padding: 20px;\n`\n","import CartItem from '../CartItem/CartItem'\nimport { Wrapper } from './Cart.styles'\nimport { Product } from '../../App'\nimport React from 'react'\n\ntype Props = {\n  cartItems: Product[]\n  addToCart: (clickedItem: Product) => void\n  removeFromCart: (id: number) => void\n}\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n  const calculateTotal = (items: Product[]) =>\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0)\n\n  return (\n    <Wrapper>\n      <h2>Your Shopping Cart</h2>\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n      {cartItems.map((item) => (\n        <CartItem\n          key={item.id}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      ))}\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n  )\n}\n\nexport default Cart\n","import styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const Wrapper = styled.div`\n  margin: 40px;\n`\n\nexport const StyledButton = styled(IconButton)`\n  position: fixed;\n  z-index: 100;\n  right: 20px;\n  top: 20px;\n`\n","import styled from 'styled-components'\n\nexport const AddRemoveItems = styled.span`\n  cursor: pointer;\n`\n","import React from 'react'\nimport { TableBody, TableCell, TableRow } from '@material-ui/core'\nimport { Product } from '../../App'\nimport { AddRemoveItems } from './Table.styles'\n\ntype Props = {\n  data: Product\n  handleAddToCart: (clickedItem: Product) => void\n  removeFromCart: (id: number) => void\n}\n\nconst TableData: React.FC<Props> = ({\n  data,\n  handleAddToCart,\n  removeFromCart,\n}) => {\n  return (\n    <TableBody>\n      <TableRow>\n        <TableCell>{data.category.name}</TableCell>\n        <TableCell>{data.name}</TableCell>\n        <TableCell>${data.price}</TableCell>\n        <TableCell style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <AddRemoveItems onClick={() => removeFromCart(data.id)}>\n            (-)\n          </AddRemoveItems>{' '}\n          Select\n          <AddRemoveItems onClick={() => handleAddToCart(data)}>\n            (+)\n          </AddRemoveItems>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  )\n}\n\nexport default TableData\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\n// Components\nimport Cart from './components/Cart/Cart'\nimport Drawer from '@material-ui/core/Drawer'\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\nimport Badge from '@material-ui/core/Badge'\nimport { Paper, Table, TableCell, TableHead, TableRow } from '@material-ui/core'\n// Styles\nimport { Wrapper, StyledButton } from './App.styles'\nimport React from 'react'\nimport TableData from 'components/Table/TableData'\n\n// Interfaces\ninterface Category {\n  id: string\n  name: string\n}\n\nexport interface Product {\n  name: string\n  category: Category\n  price: number\n  id: number\n  amount: number\n}\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false)\n  const [cartItems, setCartItems] = useState([] as Product[])\n  const [products, setProducts] = useState<Product[]>()\n  const [sortOrderByPrice, setSortOrderByPrice] = useState<boolean>(true)\n  const [sortOrderByCategory, setSortOrderByCategory] = useState<boolean>(true)\n\n  useEffect(() => {\n    axios\n      .get<Product[]>('http://localhost:3001/api/products')\n      .then((response) => {\n        setProducts(response.data)\n      })\n  }, [])\n\n  const getTotalItems = (items: Product[]) =>\n    items.reduce((ack: number, item) => ack + item.amount, 0)\n\n  const handleAddToCart = (clickedItem: Product) => {\n    setCartItems((prev) => {\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id)\n\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        )\n      }\n      return [...prev, { ...clickedItem, amount: 1 }]\n    })\n  }\n\n  // remove items from cart\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) =>\n      prev.reduce((ack, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return ack\n          return [...ack, { ...item, amount: item.amount - 1 }]\n        } else {\n          return [...ack, item]\n        }\n      }, [] as Product[])\n    )\n  }\n\n  // sort list by price\n  const handlesortByPrice = (products: Product[]) => {\n    if (sortOrderByPrice) {\n      products.sort((obj1: Product, obj2: Product) => {\n        if (obj1.price > obj2.price) return 1\n        if (obj1.price < obj2.price) return -1\n        return 0\n      })\n      setSortOrderByPrice(false)\n    } else {\n      products.sort((obj1: Product, obj2: Product) => {\n        if (obj1.price < obj2.price) return 1\n        if (obj1.price > obj2.price) return -1\n        return 0\n      })\n      setSortOrderByPrice(true)\n    }\n  }\n\n  // sort items by category\n  const handlesortByCategory = (products: Product[]) => {\n    if (sortOrderByCategory) {\n      products.sort((obj1: Product, obj2: Product) => {\n        if (obj1.category.name > obj2.category.name) return 1\n        if (obj1.category.name < obj2.category.name) return -1\n        return 0\n      })\n      setSortOrderByCategory(false)\n    } else {\n      products.sort((obj1: Product, obj2: Product) => {\n        if (obj1.category.name < obj2.category.name) return 1\n        if (obj1.category.name > obj2.category.name) return -1\n        return 0\n      })\n      setSortOrderByCategory(true)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton\n        onClick={() => setCartOpen(true)}\n        style={{ float: 'right', top: '-2em' }}\n      >\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Paper\n        style={{\n          maxWidth: '800px',\n          margin: '0 auto',\n          marginTop: '5em',\n        }}\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell\n                onClick={() => handlesortByCategory(products!)}\n                style={{ cursor: 'pointer' }}\n              >\n                Category\n              </TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell\n                onClick={() => handlesortByPrice(products!)}\n                style={{ cursor: 'pointer' }}\n              >\n                Price\n              </TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          {products?.map((item) => (\n            <TableData\n              key={item.id}\n              data={item}\n              handleAddToCart={handleAddToCart}\n              removeFromCart={handleRemoveFromCart}\n            />\n          ))}\n        </Table>\n      </Paper>\n    </Wrapper>\n  )\n}\n\nexport default App\n","import App from 'App'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nrender(<App />, document.getElementById('root'))\n"],"sourceRoot":""}